{"version":3,"sources":["common.js","components/Layout/LeftBar.js","components/Layout/Loading.js","components/Pages/ViewBids.js","components/Pages/ViewPetOwners.js","components/Pages/ViewCareTakers.js","components/Pages/CreatePet.js","components/Pages/ViewPets.js","components/Pages/CreateBid.js","components/Pages/ViewMyPets.js","components/Pages/CreateCard.js","components/NewPages/PetOwner/PetOwnerProfile.js","components/NewPages/PetOwner/PetOwnerBid.js","components/NewPages/PetOwner/PetOwnerHistory.js","components/NewPages/PCSAdmin/PCSProfile.js","components/Pages/CreateUser.js","components/NewPages/PCSAdmin/PCSHistory.js","components/NewPages/Caretaker/CaretakerProfile.js","components/NewPages/Caretaker/CaretakerLeave.js","components/NewPages/Caretaker/CaretakerHistory.js","components/Workspace.js","components/Home.js","App.js","index.js"],"names":["USER_TYPES","CURRENT_PAGE","convertDateTimeToYYYYMMdd","oldDate","date","Date","getFullYear","getMonth","getDate","getTodayDateString","LeftDrawer","styled","isMinimise","other","Drawer","Button","DefaultButton","IconsContainer","div","TitleText","h1","LeftBar","props","handlePageChange","newpage","state","this","userType","handleUserType","petOwnerEmail","PCSEmail","caretakerEmail","variant","anchor","open","FormControl","InputLabel","id","Select","labelId","value","onChange","MenuItem","color","onClick","Divider","React","Component","StyledBounceLoader","BounceLoader","Loading","VerticalWrapper","ViewBids","componentDidMount","a","fetchAllBids","fetch","then","response","console","log","json","data","setState","isLoading","catch","error","handleDeleteBid","newData","oldData","handleTableUpdate","oldDataId","columns","title","field","options","actionsColumnIndex","editable","onRowUpdate","Promise","resolve","setTimeout","prevState","indexOf","onRowDelete","splice","_id","ViewPetOwners","fetchAllPetOwners","handleDeleteOwner","email","ViewCareTakers","fetchAllCareTakers","CreatePet","petType","myChangeHandler","event","nam","target","name","val","handlePetType","handleCreatePet","special","profile","method","headers","Accept","body","JSON","stringify","pet_owner_email","category","special_requirements","pet_name","isSuccess","component","FormLabel","RadioGroup","FormControlLabel","control","Radio","label","TextField","type","multiline","rows","ViewPets","fetchAllPets","CreateBid","newUserType","focusedRange","handleCreateBid","handleSelectDateRange","isSelectDate","handleConfirmSelectDates","which","payload","isFetchingData","dateRangePicker","selection","endDate","addDays","startDate","key","toString","bind","showSelectionPreview","moveRangeOnFirstSelection","months","ranges","minDate","onRangeFocusChange","handleCreateUser","ViewMyPets","accepts","petColumns","pets","CreateCard","handleCreateCard","PetOwnerProfile","fetchUserName","fetchMyPets","fetchRecents","handleAddPet","isAddPet","handleAddCard","isAddCard","recents","fetchPaymentMethods","paymentMethods","handleDeletePayment","credit_card_number","credit_card_expiry","handleDeletePet","paymentColumns","recentColumns","Card","CardContent","Typography","VerticalWrapper1","StyledDiv","PetOwnerBid","fetchAvailableCaretakers","pet","caretakers","handleSelectPet","e","selectedPet","handlePaymentMethod","paymentMethod","handleDeliveryMode","deliveryMode","handleSelectCareTaker","caretakeremail","care_taker_email","success_status","start_date","end_date","price","rating","review","payment_method","delivery_method","text","caretakerColumn","length","map","caretaker","aria-label","disabled","PetOwnerHistory","fetchMyBids","bids","handleCreateReview","bidColumns","validate","rowData","reject","dataUpdate","tableData","PCSProfile","CreateUser","password","secondQueryString","res","PCSHistory","fetchPastPaychecks","pastPaychecks","paycheckColumns","CaretakerProfile","fetchEmploymentType","fetchCurrentPets","fetchPetDays","filterUserPetDay","employment","fetchFullTimeSalary","filterUserExpectedSalary","fetchPartTimeSalary","petDays","expectedSalaries","alert","changePetDayYear","petDayYear","changePetDayMonth","petDayMonth","changeSalaryYear","salaryYear","changeSalaryMonth","salaryMonth","found","find","salary","month","year","expectedSalary","expected_salary","petDay","monthly_pet_days","avg_price","petColumn","CaretakerLeave","fetchLeaves","fetchFreeDays","leaveDates","freeDates","createLeave","unavailable_date","createFreeDay","free_date","deleteLeave","deleteFreeDay","leaveColumns","freeColumns","onRowAdd","CaretakerHistory","fetchPastBids","pastBids","Workspace","currentPage","MainContainer","Home","newType","selectedPage","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4948fd7f.chunk.js","sourcesContent":["export const USER_TYPES = {\n  ADMIN: \"PCS Administrator\",\n  CARETAKER: \"Care Taker\",\n  PETOWNER: \"Pet Owner\",\n};\n\nexport const CURRENT_PAGE = {\n  // LEGACY ROUTES\n  VIEW_CARETAKER: \"View Caretakers\",\n  VIEW_PETOWNER: \"View Pet Owners\",\n  VIEW_BIDS: \"View All Bids\",\n  VIEW_PETS: \"View Pets\",\n  VIEW_PETOWNER_PET: \"View my Pets\",\n  CREATE_PET: \"Add New Pet\",\n  CREATE_BID: \"Create Bid\",\n  CREATE_USER: \"Create User\",\n  // BELOW IS NEW\n  PETOWNER_PROFILE: \"Pet Owner Profile\",\n  PETOWNER_BID: \"Pet Owner Bid\",\n  PETOWNER_HISTORY: \"Pet Owner History\",\n  CARETAKER_PROFILE: \"Care Taker Profile\",\n  CARETAKER_LEAVE: \"Manage Leave\",\n  CARETAKER_HISTORY: \"Care Taker History\",\n  PCSADMIN_PROFILE: \"Admin Profile\",\n  PCSADMIN_HISTORY: \"Admin Paychecks\",\n};\n\n//converts object to YYYYMMDD\nexport const convertDateTimeToYYYYMMdd = (oldDate) => {\n  const date = new Date(oldDate);\n  let newDateString =\n    date.getFullYear() +\n    \"-\" +\n    (date.getMonth() > 8 ? date.getMonth() + 1 : \"0\" + (date.getMonth() + 1)) +\n    \"-\" +\n    (date.getDate() > 9 ? date.getDate() : \"0\" + date.getDate());\n\n  return newDateString;\n};\n\nexport const convertDateTimeToddMMYYYY = (oldDate) => {\n  const date = new Date(oldDate);\n  let newDateString =\n    (date.getDate() > 9 ? date.getDate() : \"0\" + date.getDate()) +\n    \"/\" +\n    (date.getMonth() > 8 ? date.getMonth() + 1 : \"0\" + (date.getMonth() + 1)) +\n    \"/\" +\n    date.getFullYear();\n\n  return newDateString;\n};\n\nexport const getTodayDateString = () => {\n  const date = new Date();\n  let newDateString =\n    date.getFullYear() +\n    \"-\" +\n    (date.getMonth() > 8 ? date.getMonth() + 1 : \"0\" + (date.getMonth() + 1)) +\n    \"-\" +\n    (date.getDate() > 9 ? date.getDate() : \"0\" + date.getDate());\n\n  return newDateString;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Drawer } from \"@material-ui/core\";\nimport { Button as DefaultButton } from \"@material-ui/core\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { CURRENT_PAGE, USER_TYPES } from \"../../common\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst LeftDrawer = styled(({ isMinimise, ...other }) => <Drawer {...other} />)`\n  & .MuiDrawer-paperAnchorDockedLeft {\n    width: 280px;\n    background-color: #3f51b5;\n    border: none;\n    -webkit-box-shadow: 1px 3px 1px #9e9e9e;\n    -moz-box-shadow: 1px 3px 1px #9e9e9e;\n    box-shadow: 1px 3px 1px #9e9e9e;\n  }\n`;\n\nconst Button = styled(DefaultButton)`\n  margin-top: 2px;\n  margin-bottom: 2px;\n  width: 100%;\n`;\n\nconst IconsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 8px 0;\n`;\n\nconst TitleText = styled.h1`\n  font-size: 20px;\n  color: #000000;\n  font-weight: 900;\n`;\n\nexport class LeftBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  handlePageChange = (newpage) => {\n    this.props.handlePageChange(newpage);\n  };\n\n  render() {\n    const {\n      userType,\n      handleUserType,\n      petOwnerEmail,\n      PCSEmail,\n      caretakerEmail,\n    } = this.props;\n    return (\n      <LeftDrawer variant=\"permanent\" anchor=\"left\" open>\n        <IconsContainer>\n          <TitleText>CS2102 PET SHOP</TitleText>\n          <FormControl variant=\"filled\">\n            <InputLabel id=\"demo-simple-select-filled-label\">\n              <b>Account Type</b>\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-filled-label\"\n              id=\"demo-simple-select-filled\"\n              value={userType}\n              onChange={handleUserType}\n            >\n              <MenuItem value={USER_TYPES.ADMIN}>PCS Administrator</MenuItem>\n              <MenuItem value={USER_TYPES.CARETAKER}>Care Taker</MenuItem>\n              <MenuItem value={USER_TYPES.PETOWNER}>Pet Owner</MenuItem>\n            </Select>\n          </FormControl>\n          <hr />\n          {userType === USER_TYPES.ADMIN && (\n            <>\n              <h5>\n                Admin-only Features\n                <br />\n                Emulated Admin: {PCSEmail}\n              </h5>\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={() => {\n                  this.handlePageChange(CURRENT_PAGE.PCSADMIN_PROFILE);\n                }}\n              >\n                My Profile\n              </Button>\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={() => {\n                  this.handlePageChange(CURRENT_PAGE.CREATE_USER);\n                }}\n              >\n                Create User\n              </Button>\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={() => {\n                  this.handlePageChange(CURRENT_PAGE.PCSADMIN_HISTORY);\n                }}\n              >\n                Paychecks\n              </Button>\n              <Divider variant=\"middle\" />\n              <hr />\n            </>\n          )}\n          {userType === USER_TYPES.ADMIN && (\n            <>\n              <h5>\n                Caretaker-only Features\n                <br />\n                Emulated Caretaker: {caretakerEmail}\n              </h5>\n            </>\n          )}\n          {(userType === USER_TYPES.CARETAKER ||\n            userType === USER_TYPES.ADMIN) && (\n            <>\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={() => {\n                  this.handlePageChange(CURRENT_PAGE.CARETAKER_PROFILE);\n                }}\n              >\n                My Profile\n              </Button>\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={() => {\n                  this.handlePageChange(CURRENT_PAGE.CARETAKER_LEAVE);\n                }}\n              >\n                Manage Leave\n              </Button>\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={() => {\n                  this.handlePageChange(CURRENT_PAGE.CARETAKER_HISTORY);\n                }}\n              >\n                History\n              </Button>\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={() => {\n                  this.handlePageChange(CURRENT_PAGE.VIEW_PETS);\n                }}\n              >\n                View All Pets\n              </Button>\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={() => {\n                  this.handlePageChange(CURRENT_PAGE.VIEW_PETOWNER);\n                }}\n              >\n                View All Pet Owners\n              </Button>\n              <Divider variant=\"middle\" />\n\n              <hr />\n            </>\n          )}\n          {userType === USER_TYPES.ADMIN && (\n            <>\n              <h5>\n                Pet-owner-only Features\n                <br />\n                Emulated PetOwner: {petOwnerEmail}\n              </h5>\n            </>\n          )}\n          {(userType === USER_TYPES.PETOWNER ||\n            userType === USER_TYPES.ADMIN) && (\n            <>\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={() => {\n                  this.handlePageChange(CURRENT_PAGE.PETOWNER_PROFILE);\n                }}\n              >\n                My Profile\n              </Button>\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={() => {\n                  this.handlePageChange(CURRENT_PAGE.PETOWNER_BID);\n                }}\n              >\n                Bid for Care-Takers\n              </Button>\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={() => {\n                  this.handlePageChange(CURRENT_PAGE.PETOWNER_HISTORY);\n                }}\n              >\n                History\n              </Button>\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={() => {\n                  this.handlePageChange(CURRENT_PAGE.VIEW_CARETAKER);\n                }}\n              >\n                View All Caretakers\n              </Button>\n              <Divider variant=\"middle\" />\n              <hr />\n            </>\n          )}\n        </IconsContainer>\n      </LeftDrawer>\n    );\n  }\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { BounceLoader } from 'react-spinners';\n\nconst StyledBounceLoader = styled(BounceLoader)`\n  size: 25;\n  margin: 2px;\n`;\n\nexport default class Loading extends React.Component {\n  render() {\n    return <StyledBounceLoader color={'#4495EE'} />;\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport MaterialTable from \"material-table\";\nimport { Button } from \"@material-ui/core\";\nimport Loading from \"../Layout/Loading\";\n\nconst VerticalWrapper = styled.div`\n  background-color: #f2f7f7;\n  padding: 20px;\n`;\n\nexport class ViewBids extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      columns: [\n        { title: \"Caretaker Email\", field: \"care_taker_email\" },\n        { title: \"Delivery Method\", field: \"delivery_method\" },\n        { title: \"price\", field: \"price\" },\n        { title: \"success\", field: \"success_status\" },\n        { title: \"year\", field: \"year\" },\n        { title: \"pet name\", field: \"pet_name\" },\n        { title: \"start date\", field: \"start_date\" },\n        { title: \"payment method\", field: \"payment_method\" },\n      ],\n    };\n  }\n\n  componentDidMount = async () => {\n    await this.fetchAllBids();\n  };\n\n  fetchAllBids = async () => {\n    await fetch(\"/bids\")\n      .then((response) => {\n        console.log(response);\n        return response.json();\n      })\n      .then((data) => {\n        console.log(data);\n        this.setState({ data: data, isLoading: false });\n      })\n      .catch((error) => console.log(`Caught promise: ${error}`));\n  };\n\n  handleDeleteBid = (newData, oldData) => {};\n  handleTableUpdate = (oldDataId) => {};\n\n  render() {\n    const { isLoading } = this.state;\n    return (\n      <>\n        {isLoading && <Loading />}\n        {!isLoading && (\n          <VerticalWrapper>\n            <Button color=\"secondary\" onClick={this.fetchAllBids}>\n              Refresh\n            </Button>\n            <MaterialTable\n              columns={this.state.columns}\n              data={this.state.data}\n              title=\"Bids\"\n              options={{\n                actionsColumnIndex: -1,\n              }}\n              editable={{\n                onRowUpdate: (newData, oldData) =>\n                  new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve();\n                      if (oldData) {\n                        this.setState((prevState) => {\n                          const data = [...prevState.data];\n                          data[data.indexOf(oldData)] = newData;\n                          return { ...prevState, data };\n                        });\n                      }\n                      this.handleTableUpdate(newData, oldData);\n                    }, 600);\n                  }),\n                onRowDelete: (oldData) =>\n                  new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve();\n                      this.setState((prevState) => {\n                        const data = [...prevState.data];\n                        data.splice(data.indexOf(oldData), 1);\n                        return { ...prevState, data };\n                      });\n                      this.handleDeleteBid(oldData._id);\n                    }, 600);\n                  }),\n              }}\n            />\n          </VerticalWrapper>\n        )}\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport MaterialTable from \"material-table\";\nimport { Button } from \"@material-ui/core\";\nimport Loading from \"../Layout/Loading\";\n\nconst VerticalWrapper = styled.div`\n  background-color: #f2f7f7;\n  padding: 20px;\n`;\n\nexport class ViewPetOwners extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      columns: [{ title: \"Email\", field: \"email\" }],\n    };\n  }\n\n  componentDidMount = async () => {\n    await this.fetchAllPetOwners();\n  };\n\n  fetchAllPetOwners = async () => {\n    await fetch(\"/petowners\")\n      .then((response) => {\n        console.log(response);\n        return response.json();\n      })\n      .then((data) => {\n        console.log(data);\n        this.setState({ data: data, isLoading: false });\n      })\n      .catch((error) => console.log(`Caught promise: ${error}`));\n  };\n\n  handleDeleteOwner = (email) => {\n    console.log(email);\n  };\n\n  render() {\n    const { isLoading } = this.state;\n    return (\n      <>\n        {isLoading && <Loading />}\n        {!isLoading && (\n          <VerticalWrapper>\n            <Button color=\"secondary\" onClick={this.fetchAllPetOwners}>\n              Refresh\n            </Button>\n            <MaterialTable\n              columns={this.state.columns}\n              data={this.state.data}\n              title=\"All Pet Owners\"\n              options={{\n                actionsColumnIndex: -1,\n              }}\n              editable={{\n                onRowDelete: (oldData) =>\n                  new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve();\n                      this.setState((prevState) => {\n                        const data = [...prevState.data];\n                        data.splice(data.indexOf(oldData), 1);\n                        return { ...prevState, data };\n                      });\n                      this.handleDeleteOwner(oldData.email);\n                    }, 600);\n                  }),\n              }}\n            />\n          </VerticalWrapper>\n        )}\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport MaterialTable from \"material-table\";\nimport { Button } from \"@material-ui/core\";\nimport Loading from \"../Layout/Loading\";\n\nconst VerticalWrapper = styled.div`\n  background-color: #f2f7f7;\n  padding: 20px;\n`;\n\nexport class ViewCareTakers extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      columns: [{ title: \"Email\", field: \"email\" }],\n    };\n  }\n\n  componentDidMount = async () => {\n    await this.fetchAllCareTakers();\n  };\n\n  fetchAllCareTakers = async () => {\n    await fetch(\"/caretaker\")\n      .then((response) => {\n        console.log(response);\n        return response.json();\n      })\n      .then((data) => {\n        this.setState({ data: data, isLoading: false });\n      })\n      .catch((error) => console.log(`Caught promise: ${error}`));\n  };\n\n  handleDeleteOwner = (email) => {\n    console.log(email);\n  };\n\n  render() {\n    const { isLoading } = this.state;\n    return (\n      <>\n        {isLoading && <Loading />}\n        {!isLoading && (\n          <VerticalWrapper>\n            <Button color=\"secondary\" onClick={this.fetchAllCareTakers}>\n              Refresh\n            </Button>\n            <MaterialTable\n              columns={this.state.columns}\n              data={this.state.data}\n              title=\"All Pet Owners\"\n              options={{\n                actionsColumnIndex: -1,\n              }}\n              editable={{\n                onRowDelete: (oldData) =>\n                  new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve();\n                      this.setState((prevState) => {\n                        const data = [...prevState.data];\n                        data.splice(data.indexOf(oldData), 1);\n                        return { ...prevState, data };\n                      });\n                      this.handleDeleteOwner(oldData.email);\n                    }, 600);\n                  }),\n              }}\n            />\n          </VerticalWrapper>\n        )}\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport Loading from \"../Layout/Loading\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nexport class CreatePet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      isSuccess: false,\n    };\n  }\n\n  componentDidMount = async () => {\n    // await this.testApi();\n    this.setState({\n      isLoading: false,\n      petType: \"dog\",\n    });\n  };\n\n  myChangeHandler = (event) => {\n    let nam = event.target.name;\n    let val = event.target.value;\n\n    // if (nam === \"password\") {\n    //   if (val.length < 6) {\n    //     alert(\"Your password must be at least 6 characters\");\n    //   }\n    // }\n    this.setState({ [nam]: val });\n  };\n\n  handlePetType = (event) => {\n    this.setState({ petType: event.target.value });\n  };\n\n  handleCreatePet = async () => {\n    const { name, special, petType, profile } = this.state;\n    console.log(name, special, petType, profile);\n    fetch(\"/api/pets\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        pet_owner_email: \"petowner3@email.com\",\n        category: \"dog\",\n        special_requirements: \"dog\",\n        pet_name: \"doggy2\",\n        profile: \"profile\",\n      }),\n    })\n      .then(function (response) {\n        return response.json();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n    this.setState({\n      isLoading: false,\n      isSuccess: true,\n    });\n  };\n\n  render() {\n    const { isLoading, petType, isSuccess, name } = this.state;\n    return (\n      <>\n        {isLoading && <Loading />}\n        {!isLoading && isSuccess && (\n          <>\n            Successfully added {name}.\n            <br />\n            <hr />\n            <Button\n              color=\"secondary\"\n              variant=\"contained\"\n              onClick={() => {\n                this.setState({\n                  isSuccess: false,\n                });\n              }}\n            >\n              Add more Pet\n            </Button>\n          </>\n        )}\n        {!isLoading && !isSuccess && (\n          <>\n            <br />\n            <FormControl component=\"fieldset\">\n              <FormLabel component=\"legend\">Pet Type</FormLabel>\n              <RadioGroup value={petType} onChange={this.handlePetType}>\n                <FormControlLabel value=\"dog\" control={<Radio />} label=\"dog\" />\n                <FormControlLabel value=\"cat\" control={<Radio />} label=\"cat\" />\n                <FormControlLabel\n                  value=\"hamster\"\n                  control={<Radio />}\n                  label=\"hamster\"\n                />\n                <FormControlLabel\n                  value=\"tortise\"\n                  control={<Radio />}\n                  label=\"tortise\"\n                />\n                <FormControlLabel\n                  value=\"bird\"\n                  control={<Radio />}\n                  label=\"bird\"\n                />\n              </RadioGroup>\n            </FormControl>\n            <form>\n              <p>Pet Name:</p>\n              <TextField\n                type=\"text\"\n                name=\"name\"\n                label=\"Pet name\"\n                variant=\"outlined\"\n                onChange={this.myChangeHandler}\n              />\n              <p>Special Requirements:</p>\n              <TextField\n                type=\"text\"\n                name=\"special\"\n                multiline\n                rows={4}\n                label=\"Special Requirements\"\n                variant=\"outlined\"\n                onChange={this.myChangeHandler}\n              />\n              <p>Dog Description:</p>\n              <TextField\n                type=\"text\"\n                name=\"profile\"\n                multiline\n                rows={4}\n                label=\"Pet Profile\"\n                variant=\"outlined\"\n                onChange={this.myChangeHandler}\n              />\n            </form>\n            <br />\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={() => {\n                this.setState({\n                  isLoading: true,\n                });\n                this.handleCreatePet();\n              }}\n            >\n              Add Pet\n            </Button>\n            <br />\n          </>\n        )}\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport MaterialTable from \"material-table\";\nimport { Button } from \"@material-ui/core\";\nimport Loading from \"../Layout/Loading\";\n\nconst VerticalWrapper = styled.div`\n  background-color: #f2f7f7;\n  padding: 20px;\n`;\n\nexport class ViewPets extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      columns: [\n        { title: \"Owner Email\", field: \"pet_owner_email\" },\n        { title: \"Name\", field: \"pet_name\" },\n        { title: \"Special Requirements\", field: \"special_requirements\" },\n        { title: \"Type\", field: \"category\" },\n        { title: \"Descriptions\", field: \"profile\" },\n      ],\n    };\n  }\n\n  componentDidMount = async () => {\n    await this.fetchAllPets();\n  };\n\n  fetchAllPets = async () => {\n    await fetch(\"/pets\")\n      .then((response) => {\n        console.log(response);\n        return response.json();\n      })\n      .then((data) => {\n        console.log(data);\n        this.setState({ data: data, isLoading: false });\n      })\n      .catch((error) => console.log(`Caught promise: ${error}`));\n  };\n\n  handleDeleteOwner = (email) => {\n    console.log(email);\n  };\n\n  render() {\n    const { isLoading } = this.state;\n    return (\n      <>\n        {isLoading && <Loading />}\n        {!isLoading && (\n          <VerticalWrapper>\n            <h1>View All Pets</h1>\n            <Button color=\"secondary\" onClick={this.fetchAllPets}>\n              Refresh\n            </Button>\n            <MaterialTable\n              columns={this.state.columns}\n              data={this.state.data}\n              title=\"All Pet Owners\"\n              options={{\n                actionsColumnIndex: -1,\n              }}\n            />\n          </VerticalWrapper>\n        )}\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Button } from \"@material-ui/core\";\nimport Loading from \"../Layout/Loading\";\nimport \"react-date-range/dist/styles.css\"; // main style file\nimport \"react-date-range/dist/theme/default.css\"; // theme css file\nimport TextField from \"@material-ui/core/TextField\";\nimport { DateRangePicker } from \"react-date-range\";\nimport { addDays } from \"date-fns\";\nimport { USER_TYPES } from \"../../common\";\n\nconst VerticalWrapper = styled.div`\n  background-color: #f2f7f7;\n  padding: 20px;\n`;\n\nexport class CreateBid extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      isSuccess: false,\n      dateRangePicker: {\n        selection: {\n          endDate: addDays(new Date(), 7),\n          startDate: addDays(new Date(), 1),\n          key: \"selection\",\n        },\n      },\n    };\n  }\n\n  componentDidMount = async () => {\n    // await this.testApi();\n    this.setState({\n      isLoading: false,\n      newUserType: USER_TYPES.CARETAKER,\n      focusedRange: [0, 0],\n    });\n  };\n\n  myChangeHandler = (event) => {\n    let nam = event.target.name;\n    let val = event.target.value;\n\n    // if (nam === \"password\") {\n    //   if (val.length < 6) {\n    //     alert(\"Your password must be at least 6 characters\");\n    //   }\n    // }\n    this.setState({ [nam]: val });\n  };\n\n  handleCreateBid = () => {\n    /**\n * {\n    \"pet_owner_email\": \"petowner3@email.com\",\n    \"care_taker_email\": \"caretaker3@email.com\",\n    \"pet_name\": \"pop\",\n    \"success_status\": \"fail\",\n    \"start_date\": \"02/12/2020\",\n    \"end_date\": \"03/12/2020\",\n    \"month\": \"January\",\n    \"year\": \"2020\",\n    \"price\": \"60\",\n    \"rating\": \"1\",\n    \"review\": \"1\",\n    \"delivery_method\": \"car\",\n    \"payment_method\": \"visa\"\n}\n */\n    // const { newUserType, name, email, password } = this.state;\n    // console.log(newUserType, name, email, password);\n    // ({\n    //   pet_owner_email: \"petowner@email.com\",\n    //   care_taker_email: \"test\",\n    //   pet_name: \"test\",\n    //   success_status: \"fail\",\n    //   start_date: \"test\",\n    //   end_date: \"test\",\n    //   price: \"test\",\n    //   rating: \"test\",\n    //   review: \"test\",\n    //   delivery_method: \"test\",\n    //   payment_method: \"visa\",\n    // });\n    this.setState({\n      isLoading: false,\n      isSuccess: true,\n    });\n  };\n\n  handleSelectDateRange = () => {\n    this.setState({\n      isSelectDate: !this.state.isSelectDate,\n    });\n  };\n\n  handleConfirmSelectDates = (which, payload) => {\n    this.setState({\n      isFetchingData: true,\n      [which]: {\n        ...this.state[which],\n        ...payload,\n      },\n    });\n  };\n\n  render() {\n    const {\n      isLoading,\n      focusedRange,\n      isSuccess,\n      name,\n      dateRangePicker,\n    } = this.state;\n    return (\n      <>\n        {isLoading && <Loading />}\n        {!isLoading && isSuccess && (\n          <VerticalWrapper>\n            Successfully bidded for {name}\n            <br />@ {dateRangePicker.selection.startDate.toString()} TO{\" \"}\n            {dateRangePicker.selection.endDate.toString()}.\n            <br />\n            <hr />\n            <Button\n              color=\"secondary\"\n              variant=\"contained\"\n              onClick={() => {\n                this.setState({\n                  isSuccess: false,\n                });\n              }}\n            >\n              Create New Bid\n            </Button>\n          </VerticalWrapper>\n        )}\n        {!isLoading && !isSuccess && (\n          <VerticalWrapper>\n            <form>\n              <p>Name:</p>\n              <TextField\n                type=\"text\"\n                name=\"name\"\n                label=\"Your name\"\n                variant=\"outlined\"\n                onChange={this.myChangeHandler}\n              />\n              <p>Email:</p>\n              <TextField\n                type=\"text\"\n                name=\"email\"\n                label=\"Email\"\n                variant=\"outlined\"\n                onChange={this.myChangeHandler}\n              />\n              <p>Enter password:</p>\n              <TextField\n                type=\"text\"\n                name=\"password\"\n                label=\"Password\"\n                variant=\"outlined\"\n                onChange={this.myChangeHandler}\n              />\n            </form>\n            <br />\n            <DateRangePicker\n              onChange={this.handleConfirmSelectDates.bind(\n                this,\n                \"dateRangePicker\"\n              )}\n              showSelectionPreview={true}\n              moveRangeOnFirstSelection={false}\n              months={1}\n              ranges={[this.state.dateRangePicker.selection]}\n              minDate={addDays(new Date(), 1)}\n              focusedRange={focusedRange}\n              onRangeFocusChange={(focusedRange) => {\n                const [, rangeStep] = focusedRange;\n                if (!rangeStep) {\n                  this.handleSelectDateRange();\n                }\n                this.setState({ focusedRange });\n              }}\n            />\n            <hr />\n            <br />\n            <Button\n              color=\"secondary\"\n              variant=\"contained\"\n              onClick={() => {\n                this.setState({\n                  isLoading: true,\n                });\n                this.handleCreateUser();\n              }}\n            >\n              Create User\n            </Button>\n          </VerticalWrapper>\n        )}\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport MaterialTable from \"material-table\";\nimport { Button } from \"@material-ui/core\";\nimport Loading from \"../Layout/Loading\";\n\nconst VerticalWrapper = styled.div`\n  background-color: #f2f7f7;\n  padding: 20px;\n`;\n\nexport class ViewMyPets extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      petColumns: [\n        { title: \"Owner Email\", field: \"pet_owner_email\" },\n        { title: \"Name\", field: \"pet_name\" },\n        { title: \"Special Requirements\", field: \"special_requirements\" },\n        { title: \"Type\", field: \"category\" },\n        { title: \"Descriptions\", field: \"profile\" },\n      ],\n    };\n  }\n\n  componentDidMount = async () => {\n    await this.fetchAllPets();\n  };\n\n  fetchAllPets = async () => {\n    await fetch(\"/pets/petowner@email.com\", {\n      headers: {\n        accepts: \"application/json\",\n      },\n    })\n      .then((response) => {\n        console.log(response);\n        return response.json();\n      })\n      .then((data) => {\n        console.log(data);\n        this.setState({ data: data, isLoading: false });\n      })\n      .catch((error) => console.log(`Caught promise: ${error}`));\n  };\n\n  handleDeleteOwner = (email) => {\n    console.log(email);\n  };\n\n  render() {\n    const { isLoading } = this.state;\n    return (\n      <>\n        {isLoading && <Loading />}\n        {!isLoading && (\n          <VerticalWrapper>\n            <Button color=\"secondary\" onClick={this.fetchAllPets}>\n              Refresh\n            </Button>\n            <MaterialTable\n              columns={this.state.petColumns}\n              data={this.state.pets}\n              title=\"My Pets\"\n              options={{\n                actionsColumnIndex: -1,\n              }}\n            />\n          </VerticalWrapper>\n        )}\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport Loading from \"../Layout/Loading\";\nimport TextField from \"@material-ui/core/TextField\";\n\nexport class CreateCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      isSuccess: false,\n    };\n  }\n\n  componentDidMount = async () => {\n    // await this.testApi();\n    this.setState({\n      isLoading: false,\n      petType: \"dog\",\n    });\n  };\n\n  myChangeHandler = (event) => {\n    let nam = event.target.name;\n    let val = event.target.value;\n\n    // if (nam === \"password\") {\n    //   if (val.length < 6) {\n    //     alert(\"Your password must be at least 6 characters\");\n    //   }\n    // }\n    this.setState({ [nam]: val });\n  };\n\n  handleCreateCard = async () => {\n    const { name, special, petType, profile } = this.state;\n    console.log(name, special, petType, profile);\n    fetch(\"/api/pets\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        pet_owner_email: \"petowner3@email.com\",\n        category: \"dog\",\n        special_requirements: \"dog\",\n        pet_name: \"doggy2\",\n        profile: \"profile\",\n      }),\n    })\n      .then(function (response) {\n        return response.json();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n    this.setState({\n      isLoading: false,\n      isSuccess: true,\n    });\n  };\n\n  render() {\n    const { isLoading, isSuccess, name } = this.state;\n    return (\n      <>\n        {isLoading && <Loading />}\n        {!isLoading && isSuccess && (\n          <>\n            Successfully added {name}.\n            <br />\n            <hr />\n            <Button\n              color=\"secondary\"\n              variant=\"contained\"\n              onClick={() => {\n                this.setState({\n                  isSuccess: false,\n                });\n              }}\n            >\n              Add more\n            </Button>\n          </>\n        )}\n        {!isLoading && !isSuccess && (\n          <>\n            <br />\n            <form>\n              <p>Credit Card Number:</p>\n              <TextField\n                type=\"text\"\n                name=\"number\"\n                label=\"Credit Card Number\"\n                variant=\"outlined\"\n                onChange={this.myChangeHandler}\n              />\n              <p>Expiry:</p>\n              <TextField\n                type=\"text\"\n                name=\"expiry\"\n                label=\"Expiry\"\n                variant=\"outlined\"\n                onChange={this.myChangeHandler}\n              />\n              <p>CVV:</p>\n              <TextField\n                type=\"text\"\n                name=\"cvv\"\n                label=\"CVV\"\n                variant=\"outlined\"\n                onChange={this.myChangeHandler}\n              />\n            </form>\n            <br />\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={() => {\n                this.setState({\n                  isLoading: true,\n                });\n                this.handleCreateCard();\n              }}\n            >\n              Add Card\n            </Button>\n            <br />\n          </>\n        )}\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport MaterialTable from \"material-table\";\nimport Card from \"@material-ui/core/Card\";\nimport { Button } from \"@material-ui/core\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Loading from \"../../Layout/Loading\";\nimport { CreatePet } from \"../../Pages/CreatePet\";\nimport { CreateCard } from \"../../Pages/CreateCard\";\n\nconst VerticalWrapper = styled.div`\n  background-color: #f2f7f7;\n  padding: 20px;\n`;\n\nexport class PetOwnerProfile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      isAddPet: false,\n      isAddCard: false,\n      petColumns: [\n        { title: \"Name\", field: \"pet_name\" },\n        { title: \"Type\", field: \"category\" },\n        { title: \"Descriptions\", field: \"profile\" },\n        { title: \"Special Requirements\", field: \"special_requirements\" },\n      ],\n      paymentColumns: [\n        { title: \"Credit Card Num\", field: \"credit_card_number\" },\n        { title: \"Expiry Date\", field: \"credit_card_expiry\" },\n      ],\n      recentColumns: [\n        { title: \"Caretaker Email\", field: \"care_taker_email\" },\n        { title: \"Pet Name\", field: \"pet_name\" },\n        { title: \"Success_status\", field: \"success_status\" },\n        { title: \"Start Date\", field: \"start_date\" },\n        { title: \"End Date\", field: \"end_date\" },\n        { title: \"Price\", field: \"price\" },\n        { title: \"Rating\", field: \"rating\" },\n        { title: \"Review\", field: \"review\" },\n        { title: \"Payment Method\", field: \"payment_method\" },\n        { title: \"Delivery Method\", field: \"delivery_method\" },\n      ],\n      pets: [],\n      paymentMethods: [],\n    };\n  }\n\n  componentDidMount = async () => {\n    await this.fetchUserName();\n    await this.fetchMyPets();\n    await this.fetchRecents();\n  };\n\n  handleAddPet = () => {\n    this.setState({\n      isAddPet: !this.state.isAddPet,\n    });\n  };\n\n  handleAddCard = () => {\n    this.setState({\n      isAddCard: !this.state.isAddCard,\n    });\n  };\n\n  fetchMyPets = async () => {\n    await fetch(\"/api/pets/\" + this.props.petOwnerEmail, {\n      headers: {\n        accepts: \"application/json\",\n      },\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        this.setState({ pets: data, isLoading: false });\n      })\n      .catch((error) => console.log(`Caught promise: ${error}`));\n  };\n\n  fetchUserName = async () => {\n    await fetch(\"/api/users/\" + this.props.petOwnerEmail, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        this.setState({ name: data[0].name, isLoading: false });\n      })\n      .catch((error) => console.log(`Caught promise: ${error}`));\n  };\n\n  fetchRecents = async () => {\n    await fetch(\"/api/recentSuccessfulBids/\" + this.props.petOwnerEmail, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        this.setState({ recents: data, isLoading: false });\n      })\n      .catch((error) => console.log(`Caught promise: ${error}`));\n  };\n\n  fetchPaymentMethods = async () => {\n    await fetch(\"/api/paymentcredentials/\" + this.props.petOwnerEmail, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        this.setState({ paymentMethods: data, isLoading: false });\n      })\n      .catch((error) => console.log(`Caught promise: ${error}`));\n  };\n\n  handleDeletePayment = async (oldData) => {\n    await fetch(\n      \"/api/paymentcredentials/\" +\n        this.props.petOwnerEmail +\n        \"/\" +\n        oldData.credit_card_number +\n        \"/\" +\n        oldData.credit_card_expiry,\n      {\n        method: \"DELETE\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => {\n        return response.json();\n      })\n      .catch((error) => console.log(`Caught promise: ${error}`));\n  };\n\n  handleDeletePet = async (oldData) => {\n    await fetch(\n      \"/api/pets/\" + oldData.pet_name + \"/\" + oldData.pet_owner_email,\n      {\n        method: \"DELETE\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => {\n        return response.json();\n      })\n      .catch((error) => console.log(`Caught promise: ${error}`));\n  };\n\n  render() {\n    const {\n      isLoading,\n      name,\n      isAddPet,\n      isAddCard,\n      // eslint-disable-next-line no-unused-vars\n      pets,\n      // eslint-disable-next-line no-unused-vars\n      paymentMethods,\n    } = this.state;\n    const { userType, petOwnerEmail } = this.props;\n    return (\n      <>\n        {isLoading && <Loading />}\n        {!isLoading && (\n          <VerticalWrapper>\n            <h1>Pet Owner Profile Page</h1>\n            <h2>My Profile</h2>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h5\" component=\"h2\">\n                  {name}\n                </Typography>\n                <Typography color=\"textSecondary\">{userType}</Typography>\n                <Typography variant=\"body2\" component=\"p\">\n                  {petOwnerEmail}\n                </Typography>\n              </CardContent>\n            </Card>\n            <br />\n            <h2>My Pets</h2>\n            {!isAddPet && (\n              <Button onClick={this.handleAddPet} variant=\"contained\">\n                Add New Pet\n              </Button>\n            )}\n            {isAddPet && (\n              <>\n                <CreatePet />\n                <Button onClick={this.handleAddPet}>Cancel</Button> <hr />\n              </>\n            )}\n            <MaterialTable\n              columns={this.state.petColumns}\n              data={this.state.pets}\n              title=\"My Pets\"\n              options={{\n                actionsColumnIndex: -1,\n              }}\n              editable={{\n                onRowDelete: (oldData) =>\n                  new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve();\n                      this.setState((prevState) => {\n                        const pets = [...prevState.pets];\n                        pets.splice(pets.indexOf(oldData), 1);\n                        return { ...prevState, pets };\n                      });\n                      this.handleDeletePet(oldData);\n                    }, 600);\n                  }),\n              }}\n            />\n            <h2>My Payment Methods</h2>\n            {!isAddCard && (\n              <Button onClick={this.handleAddCard} variant=\"contained\">\n                Add New Card\n              </Button>\n            )}\n            {isAddCard && (\n              <>\n                <CreateCard />\n                <Button onClick={this.handleAddCard}>Cancel</Button> <hr />\n              </>\n            )}\n            <MaterialTable\n              columns={this.state.paymentColumns}\n              data={this.state.paymentMethods}\n              title=\"My Payment Methods\"\n              options={{\n                actionsColumnIndex: -1,\n              }}\n              editable={{\n                onRowDelete: (oldData) =>\n                  new Promise((resolve) => {\n                    setTimeout(() => {\n                      resolve();\n                      this.setState((prevState) => {\n                        const paymentMethods = [...prevState.paymentMethods];\n                        paymentMethods.splice(\n                          paymentMethods.indexOf(oldData),\n                          1\n                        );\n                        return { ...prevState, paymentMethods };\n                      });\n                      this.handleDeletePayment(oldData);\n                    }, 600);\n                  }),\n              }}\n            />\n            <h2>My Recents</h2>\n            <MaterialTable\n              columns={this.state.recentColumns}\n              data={this.state.recents}\n              title=\"My Recents\"\n              options={{\n                actionsColumnIndex: -1,\n              }}\n            />\n          </VerticalWrapper>\n        )}\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { DateRangePicker } from \"react-date-range\";\nimport \"react-date-range/dist/styles.css\"; // main style file\nimport \"react-date-range/dist/theme/default.css\"; //\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MaterialTable from \"material-table\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { addDays } from \"date-fns\";\nimport { Button } from \"@material-ui/core\";\nimport Loading from \"../../Layout/Loading\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport { convertDateTimeToYYYYMMdd } from \"../../../common\";\n\nconst VerticalWrapper = styled.div`\n  background-color: #f2f7f7;\n  padding: 20px;\n`;\n\nconst VerticalWrapper1 = styled.div`\n  background-color: #f2f7f7;\n  padding: 20px;\n`;\n\nconst StyledDiv = styled.div`\n  border: 1px solid black;\n  display: inline-block;\n`;\nexport class PetOwnerBid extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      isSuccess: false,\n      selectedPet: \"\",\n      caretakers: [],\n      caretakeremail: \"\",\n      caretakerColumn: [{ title: \"Email\", field: \"email\" }],\n      pets: [],\n      dateRangePicker: {\n        selection: {\n          endDate: addDays(new Date(), 7),\n          startDate: addDays(new Date(), 1),\n          key: \"selection\",\n        },\n      },\n    };\n  }\n\n  componentDidMount = async () => {\n    await this.fetchMyPets();\n    await this.fetchAvailableCaretakers();\n  };\n\n  fetchMyPets = async () => {\n    await fetch(\"/pets/\" + this.props.petOwnerEmail, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        this.setState({ pets: data, isLoading: false });\n      })\n      .catch((error) => console.log(`Caught promise: ${error}`));\n  };\n\n  fetchAvailableCaretakers = async () => {\n    // /getavailablecaretakers/:start_date/:end_date\n    await fetch(\n      \"/getavailablecaretakers/\" +\n        convertDateTimeToYYYYMMdd(\n          this.state.dateRangePicker.selection.startDate\n        ) +\n        \"/\" +\n        convertDateTimeToYYYYMMdd(\n          this.state.dateRangePicker.selection.endDate\n        ) +\n        \"/\" +\n        this.state.pet.pet_name,\n      {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        this.setState({ caretakers: data, isLoading: false });\n      })\n      .catch((error) => console.log(`Caught promise: ${error}`));\n  };\n\n  handleConfirmSelectDates = (which, payload) => {\n    this.setState({\n      isFetchingData: true,\n      [which]: {\n        ...this.state[which],\n        ...payload,\n      },\n      isLoading: true,\n    });\n    this.fetchAvailableCaretakers();\n  };\n\n  handleSelectPet = (e) => {\n    this.setState({\n      selectedPet: e.target.value,\n    });\n  };\n\n  myChangeHandler = (event) => {\n    let nam = event.target.name;\n    let val = event.target.value;\n    this.setState({ [nam]: val });\n  };\n\n  handlePaymentMethod = (e) => {\n    this.setState({\n      paymentMethod: e.target.value,\n    });\n  };\n\n  handleDeliveryMode = (e) => {\n    this.setState({\n      deliveryMode: e.target.value,\n    });\n  };\n  handleSelectCareTaker = (e) => {\n    this.setState({\n      caretakeremail: e.target.value,\n    });\n  };\n\n  handleCreateBid = async () => {\n    await fetch(\"/bids/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        pet_owner_email: this.props.petOwnerEmail,\n        care_taker_email: this.state.caretakeremail,\n        pet_name: this.state.selectedPet.pet_name,\n        success_status: \"fail\",\n        start_date: convertDateTimeToYYYYMMdd(\n          this.state.dateRangePicker.selection.startDate\n        ),\n        end_date: convertDateTimeToYYYYMMdd(\n          this.state.dateRangePicker.selection.endDate\n        ),\n        price: this.state.price,\n        rating: 1,\n        review: \"1\",\n        payment_method: this.state.paymentMethod,\n        delivery_method: this.state.deliveryMode,\n      }),\n    })\n      .then((response) => {\n        return response.text();\n      })\n      .then((data) => {\n        this.setState({ isLoading: false, isSuccess: true });\n      })\n      .catch((error) => console.log(`Caught promise: ${error}`));\n  };\n\n  myChangeHandler = (event) => {\n    let nam = event.target.name;\n    let val = event.target.value;\n    this.setState({ [nam]: val });\n  };\n\n  render() {\n    const {\n      isLoading,\n      selectedPet,\n      pets,\n      paymentMethod,\n      deliveryMode,\n      caretakeremail,\n      isSuccess,\n      price,\n      caretakers,\n    } = this.state;\n\n    return (\n      <>\n        {isLoading && <Loading />}\n        {!isLoading && (\n          <>\n            <VerticalWrapper1>\n              {!isSuccess && (\n                <>\n                  <h1>Pet Owner Bid Page</h1>\n                  <h2>Pet</h2>\n                  <h2>Selected Pet</h2>\n                  {pets.length && (\n                    <FormControl variant=\"filled\">\n                      <Select\n                        value={selectedPet}\n                        onChange={this.handleSelectPet}\n                      >\n                        {pets.map((pet) => (\n                          <MenuItem value={pet}>{pet.pet_name}</MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                  )}\n                  <br />\n                  <h2>Date Range</h2>\n                  {convertDateTimeToYYYYMMdd(\n                    this.state.dateRangePicker.selection.startDate\n                  ) +\n                    \" TO \" +\n                    convertDateTimeToYYYYMMdd(\n                      this.state.dateRangePicker.selection.endDate\n                    )}\n                  <br />\n                  <br />\n                  <DateRangePicker\n                    onChange={this.handleConfirmSelectDates.bind(\n                      this,\n                      \"dateRangePicker\"\n                    )}\n                    showSelectionPreview={true}\n                    moveRangeOnFirstSelection={false}\n                    months={1}\n                    ranges={[this.state.dateRangePicker.selection]}\n                    minDate={addDays(new Date(), 1)}\n                  />\n                  <hr />\n                  <br />\n                  <h2>Input Caretaker Email</h2>\n                  Tip: These care takers are confirmed to be available given\n                  your selected date range column\n                  <br />\n                  <br />\n                  <FormControl variant=\"filled\">\n                    <Select\n                      value={caretakeremail}\n                      onChange={this.handleSelectCareTaker}\n                    >\n                      {caretakers.map((caretaker) => (\n                        <MenuItem value={caretaker.email}>\n                          {caretaker.email}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                  <h2>Your Bidding Price</h2>\n                  <TextField\n                    type=\"number\"\n                    name=\"price\"\n                    label=\"Your Bid\"\n                    variant=\"outlined\"\n                    onChange={this.myChangeHandler}\n                  />\n                  <h2>Input Payment Method</h2>\n                  <FormControl component=\"fieldset\">\n                    <RadioGroup\n                      aria-label=\"gender\"\n                      name=\"gender1\"\n                      value={paymentMethod}\n                      onChange={this.handlePaymentMethod}\n                    >\n                      <FormControlLabel\n                        value=\"visa\"\n                        control={<Radio />}\n                        label=\"visa\"\n                      />\n                      <FormControlLabel\n                        value=\"master\"\n                        control={<Radio />}\n                        label=\"master\"\n                      />\n                    </RadioGroup>\n                  </FormControl>\n                  <h2>Select Delivery Mode</h2>\n                  <FormControl component=\"fieldset\">\n                    <RadioGroup\n                      aria-label=\"gender\"\n                      name=\"gender1\"\n                      value={deliveryMode}\n                      onChange={this.handleDeliveryMode}\n                    >\n                      <FormControlLabel\n                        value=\"car\"\n                        control={<Radio />}\n                        label=\"car\"\n                      />\n                      <FormControlLabel\n                        value=\"pick-up\"\n                        control={<Radio />}\n                        label=\"pick-up\"\n                      />\n                    </RadioGroup>\n                  </FormControl>\n                  <br />\n                  <h4>\n                    **Note that bids MAY or MAY NOT be Successful. It depends on\n                    availability and other factors.\n                  </h4>\n                  <h4>Fill in all fields to create bid</h4>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={\n                      !deliveryMode ||\n                      !paymentMethod ||\n                      !caretakeremail ||\n                      !selectedPet ||\n                      !price\n                    }\n                    onClick={this.handleCreateBid}\n                  >\n                    Create Bid\n                  </Button>{\" \"}\n                </>\n              )}\n              {isSuccess && (\n                <Button onClick={this.setState({ isSuccess: false })}>\n                  Create More Bid\n                </Button>\n              )}\n            </VerticalWrapper1>\n            <StyledDiv />\n            <VerticalWrapper>\n              <h2>Available Caretakers</h2>\n              <MaterialTable\n                columns={this.state.caretakerColumn}\n                data={this.state.caretakers}\n                title=\"Available Caretakers\"\n              />\n            </VerticalWrapper>\n          </>\n        )}\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport MaterialTable from \"material-table\";\nimport Loading from \"../../Layout/Loading\";\nimport { convertDateTimeToYYYYMMdd } from \"../../../common\";\n\nconst VerticalWrapper = styled.div`\n  background-color: #f2f7f7;\n  padding: 20px;\n`;\n\nexport class PetOwnerHistory extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      bidColumns: [\n        {\n          title: \"Care-taker Email\",\n          field: \"care_taker_email\",\n        },\n        { title: \"Pet Name\", field: \"pet_name\" },\n        {\n          title: \"Success Status\",\n          field: \"success_status\",\n        },\n        {\n          title: \"Start Date\",\n          field: \"start_date\",\n        },\n        {\n          title: \"End Date\",\n          field: \"end_date\",\n        },\n        {\n          title: \"Rating\",\n          field: \"rating\",\n        },\n        {\n          title: \"Review\",\n          field: \"review\",\n          validate: (rowData) =>\n            rowData.review.length < 3 ? \"Leave at least a few words!\" : \"\",\n        },\n        {\n          title: \"Payment Method\",\n          field: \"payment_method\",\n        },\n        {\n          title: \"Delivery Method\",\n          field: \"delivery_method\",\n        },\n      ],\n      bids: [],\n    };\n  }\n\n  componentDidMount = async () => {\n    await this.fetchMyBids();\n    this.setState({\n      isLoading: false,\n    });\n  };\n\n  fetchMyBids = async () => {\n    await fetch(\"/pet_owner_success_bids/\" + this.props.petOwnerEmail, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        this.setState({ bids: data, isLoading: false });\n      })\n      .catch((error) => console.log(`Caught promise: ${error}`));\n  };\n\n  handleCreateReview = async (newData) => {\n    await fetch(\n      \"/bids/\" +\n        newData.care_taker_email +\n        \"/\" +\n        newData.pet_owner_email +\n        \"/\" +\n        newData.pet_name +\n        \"/\" +\n        convertDateTimeToYYYYMMdd(newData.start_date) +\n        \"/\" +\n        convertDateTimeToYYYYMMdd(newData.end_date) +\n        \"/\" +\n        newData.price,\n      {\n        method: \"PUT\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          ...newData,\n        }),\n      }\n    )\n      .then((response) => {\n        return response.text();\n      })\n      .then((data) => {\n        console.log(data);\n        this.setState({ isLoading: false });\n      })\n      .catch((error) => console.log(`Caught promise: ${error}`));\n  };\n\n  render() {\n    const { isLoading } = this.state;\n    return (\n      <>\n        {isLoading && <Loading />}\n        {!isLoading && (\n          <VerticalWrapper>\n            <h1>Pet Owner History Page</h1>\n            <h2>Previous Successful Bids</h2>\n            <h5>Hint: Leave reviews under Actions Column!</h5>\n            <MaterialTable\n              columns={this.state.bidColumns}\n              data={this.state.bids}\n              title=\"My Successful Bids\"\n              options={{\n                actionsColumnIndex: -1,\n              }}\n              editable={{\n                onRowUpdate: (newData, oldData) =>\n                  new Promise((resolve, reject) => {\n                    setTimeout(() => {\n                      const dataUpdate = [...this.state.bids];\n                      const index = oldData.tableData.id;\n                      dataUpdate[index] = newData;\n                      this.setState({\n                        bids: dataUpdate,\n                      });\n                      this.handleCreateReview(newData);\n                      resolve();\n                    }, 1000);\n                  }),\n              }}\n            />\n          </VerticalWrapper>\n        )}\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Loading from \"../../Layout/Loading\";\n\nconst VerticalWrapper = styled.div`\n  background-color: #f2f7f7;\n  padding: 20px;\n`;\n\nexport class PCSProfile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n    };\n  }\n\n  componentDidMount = async () => {\n    await this.fetchUserName();\n    this.setState({\n      isLoading: false,\n    });\n  };\n\n  fetchUserName = async () => {\n    await fetch(\"/users/\" + this.props.PCSEmail, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        this.setState({ name: data[0].name, isLoading: false });\n      })\n      .catch((error) => console.log(`Caught promise: ${error}`));\n  };\n\n  render() {\n    const { isLoading, name } = this.state;\n    const { PCSEmail, userType } = this.props;\n    return (\n      <>\n        {isLoading && <Loading />}\n        {!isLoading && (\n          <VerticalWrapper>\n            <h1>Admin Profile Page</h1>\n            <h2>My Profile</h2>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h5\" component=\"h2\">\n                  {name}\n                </Typography>\n                <Typography color=\"textSecondary\">{userType}</Typography>\n                <Typography variant=\"body2\" component=\"p\">\n                  {PCSEmail}\n                </Typography>\n              </CardContent>\n            </Card>\n          </VerticalWrapper>\n        )}\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Button } from \"@material-ui/core\";\nimport Loading from \"../Layout/Loading\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { USER_TYPES } from \"../../common\";\n\nconst VerticalWrapper = styled.div`\n  background-color: #f2f7f7;\n  padding: 20px;\n`;\n\nexport class CreateUser extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      isSuccess: false,\n    };\n  }\n\n  componentDidMount = async () => {\n    // await this.testApi();\n    this.setState({\n      isLoading: false,\n      newUserType: USER_TYPES.CARETAKER,\n    });\n  };\n\n  myChangeHandler = (event) => {\n    let nam = event.target.name;\n    let val = event.target.value;\n\n    // if (nam === \"password\") {\n    //   if (val.length < 6) {\n    //     alert(\"Your password must be at least 6 characters\");\n    //   }\n    // }\n    this.setState({ [nam]: val });\n  };\n\n  handleUserType = (event) => {\n    this.setState({ newUserType: event.target.value });\n  };\n\n  handleCreateUser = async () => {\n    const { newUserType, name, email, password } = this.state;\n    console.log(newUserType, name, email, password);\n    await fetch(\"/users\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password,\n        name: name,\n      }),\n    })\n      .then((response) => {\n        console.log(response);\n      })\n      .catch((error) => console.log(`Caught promise: ${error}`));\n\n    let secondQueryString = \"/\";\n    switch (newUserType) {\n      case USER_TYPES.ADMIN:\n        secondQueryString += \"pcsadmin\";\n        break;\n      case USER_TYPES.CARETAKER:\n        secondQueryString += \"caretaker\";\n        break;\n      case USER_TYPES.PETOWNER:\n        secondQueryString += \"petowners\";\n        break;\n      default:\n        break;\n    }\n\n    await fetch(secondQueryString, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        email: email,\n      }),\n    })\n      .then((res) => {\n        return res.text();\n      })\n      .then((data) => {\n        this.setState({\n          isLoading: false,\n          isSuccess: true,\n          response: data,\n        });\n      })\n      .catch((error) => console.log(`Caught promise: ${error}`));\n  };\n\n  render() {\n    const { isLoading, newUserType, isSuccess, name, response } = this.state;\n    return (\n      <>\n        {isLoading && <Loading />}\n        {!isLoading && isSuccess && (\n          <VerticalWrapper>\n            <h1>Admin Create User Page</h1>\n            Successfully added {name}.\n            <br />\n            {response}\n            <hr />\n            <Button\n              color=\"secondary\"\n              variant=\"contained\"\n              onClick={() => {\n                this.setState({\n                  isSuccess: false,\n                });\n              }}\n            >\n              Add more User\n            </Button>\n          </VerticalWrapper>\n        )}\n        {!isLoading && !isSuccess && (\n          <VerticalWrapper>\n            <h1>Admin Create User Page</h1>\n            <FormControl component=\"fieldset\">\n              <FormLabel component=\"legend\">Gender</FormLabel>\n              <RadioGroup\n                aria-label=\"gender\"\n                name=\"gender1\"\n                value={newUserType}\n                onChange={this.handleUserType}\n              >\n                <FormControlLabel\n                  value={USER_TYPES.ADMIN}\n                  control={<Radio />}\n                  label=\"Admin\"\n                />\n                <FormControlLabel\n                  value={USER_TYPES.CARETAKER}\n                  control={<Radio />}\n                  label=\"Care Taker\"\n                />\n                <FormControlLabel\n                  value={USER_TYPES.PETOWNER}\n                  control={<Radio />}\n                  label=\"Pet Owner\"\n                />\n              </RadioGroup>\n            </FormControl>\n            <form>\n              <p>Name:</p>\n              <TextField\n                type=\"text\"\n                name=\"name\"\n                label=\"Your name\"\n                variant=\"outlined\"\n                onChange={this.myChangeHandler}\n              />\n              <p>Email:</p>\n              <TextField\n                type=\"text\"\n                name=\"email\"\n                label=\"Email\"\n                variant=\"outlined\"\n                onChange={this.myChangeHandler}\n              />\n              <p>Enter password:</p>\n              <TextField\n                type=\"text\"\n                name=\"password\"\n                label=\"Password\"\n                variant=\"outlined\"\n                onChange={this.myChangeHandler}\n              />\n            </form>\n            <hr />\n            <br />\n            <Button\n              color=\"secondary\"\n              variant=\"contained\"\n              onClick={() => {\n                this.setState({\n                  isLoading: true,\n                });\n                this.handleCreateUser();\n              }}\n            >\n              Create User\n            </Button>\n          </VerticalWrapper>\n        )}\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport MaterialTable from \"material-table\";\n\nimport Loading from \"../../Layout/Loading\";\n\nconst VerticalWrapper = styled.div`\n  background-color: #f2f7f7;\n  padding: 20px;\n`;\n\nexport class PCSHistory extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      pastPaychecks: [],\n      paycheckColumns: [\n        { title: \"Payer\", field: \"payment_admin\" },\n        { title: \"Addressee\", field: \"payment_addressee\" },\n        { title: \"Amount\", field: \"amount\" },\n        { title: \"Month\", field: \"month_of_issue\" },\n        { title: \"Year\", field: \"year_of_issue\" },\n      ],\n    };\n  }\n\n  componentDidMount = async () => {\n    await this.fetchPastPaychecks();\n    this.setState({\n      isLoading: false,\n    });\n  };\n\n  fetchPastPaychecks = async () => {\n    await fetch(\"/paycheckspcs/\" + this.props.PCSEmail, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        this.setState({ pastPaychecks: data, isLoading: false });\n      })\n      .catch((error) => console.log(`Caught promise: ${error}`));\n  };\n\n  render() {\n    const { isLoading, pastPaychecks } = this.state;\n    // const {  } = this.props;\n    return (\n      <>\n        {isLoading && <Loading />}\n        {!isLoading && (\n          <VerticalWrapper>\n            <h1>Admin Paychecks History Page</h1>\n            <h2>Past Paychecks</h2>\n            <MaterialTable\n              columns={this.state.paycheckColumns}\n              data={pastPaychecks}\n              title=\"Past Paychecks\"\n              options={{\n                actionsColumnIndex: -1,\n              }}\n            />\n          </VerticalWrapper>\n        )}\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Select from \"@material-ui/core/Select\";\nimport MaterialTable from \"material-table\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { getTodayDateString } from \"../../../common\";\n\nimport Loading from \"../../Layout/Loading\";\n\nconst VerticalWrapper = styled.div`\n  background-color: #f2f7f7;\n  padding: 20px;\n`;\n\nexport class CaretakerProfile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      petDayMonth: 9,\n      petDayYear: 2020,\n      salaryMonth: 9,\n      salaryYear: 2020,\n      petDays: [],\n      petDay: [],\n      expectedSalaries: [],\n      expectedSalary:\n        \"Either this month has no entries or you have yet to select a month or year. Try Again with a new option\",\n      petColumns: [\n        { title: \"Owner Email\", field: \"pet_owner_email\" },\n        { title: \"Name\", field: \"pet_name\" },\n        { title: \"Special Requirements\", field: \"special_requirements\" },\n        { title: \"Type\", field: \"category\" },\n        { title: \"Descriptions\", field: \"profile\" },\n      ],\n      pets: [],\n      employment: \"null\",\n    };\n  }\n\n  componentDidMount = async () => {\n    await this.fetchUserName();\n    await this.fetchEmploymentType();\n    await this.fetchCurrentPets();\n    await this.fetchPetDays();\n    await this.fetchEmploymentType();\n    await this.filterUserPetDay();\n    if (this.state.employment === \"full-time caretaker\") {\n      await this.fetchFullTimeSalary();\n      await this.filterUserExpectedSalary();\n      this.setState({\n        isLoading: false,\n      });\n    } else if (this.state.employment === \"part-time caretaker\") {\n      await this.fetchPartTimeSalary();\n      this.setState({\n        isLoading: false,\n      });\n    }\n  };\n\n  fetchUserName = async () => {\n    await fetch(\"/users/\" + this.props.caretakerEmail, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        this.setState({ name: data[0].name, isLoading: false });\n      })\n      .catch((error) => console.log(`Caught promise: ${error}`));\n  };\n\n  fetchEmploymentType = async () => {\n    await fetch(\"/caretaker/\" + this.props.caretakerEmail, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => {\n        return response.text();\n      })\n      .then((data) => {\n        this.setState({ employment: data, isLoading: false });\n      })\n      .catch((error) => console.log(`Caught promise: ${error}`));\n  };\n\n  fetchPetDays = async () => {\n    await fetch(\"/petdays/\" + this.props.caretakerEmail, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        this.setState({ petDays: data, isLoading: false });\n      })\n      .catch((error) => console.log(`Caught promise: ${error}`));\n  };\n\n  fetchPartTimeSalary = async () => {\n    if (this.state.employment === \"part-time caretaker\") {\n      await fetch(\"/parttimesalary/\" + this.props.caretakerEmail, {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      })\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          this.setState({ expectedSalaries: data, isLoading: false });\n        })\n        .catch((error) => console.log(`Caught promise: ${error}`));\n    } else {\n      console.alert(\"CANNOT FETCH PART TIME SALARY! NOT PART TIMER\");\n    }\n  };\n\n  fetchFullTimeSalary = async () => {\n    if (this.state.employment === \"full-time caretaker\") {\n      await fetch(\"/fulltimesalary/\" + this.props.caretakerEmail, {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      })\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          this.setState({ expectedSalaries: data, isLoading: false });\n        })\n        .catch((error) => console.log(`Caught promise: ${error}`));\n    } else {\n      console.alert(\"NOT FULLTIME, CANNOT CALCULATE SALARY\");\n    }\n  };\n\n  fetchCurrentPets = async () => {\n    await fetch(\n      \"/bids/\" + this.props.caretakerEmail + \"/\" + getTodayDateString(),\n      {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        this.setState({ pets: data, isLoading: false });\n      })\n      .catch((error) => console.log(`Caught promise: ${error}`));\n  };\n\n  changePetDayYear = (e) => {\n    this.setState(\n      {\n        petDayYear: e.target.value,\n      },\n      () => {\n        this.filterUserPetDay();\n      }\n    );\n  };\n\n  changePetDayMonth = (e) => {\n    this.setState(\n      {\n        petDayMonth: e.target.value,\n      },\n      () => {\n        this.filterUserPetDay();\n      }\n    );\n  };\n\n  changeSalaryYear = (e) => {\n    this.setState(\n      {\n        salaryYear: e.target.value,\n      },\n      () => {\n        this.filterUserExpectedSalary();\n      }\n    );\n  };\n\n  changeSalaryMonth = (e) => {\n    this.setState(\n      {\n        salaryMonth: e.target.value,\n      },\n      () => {\n        this.filterUserExpectedSalary();\n      }\n    );\n  };\n\n  filterUserExpectedSalary = async () => {\n    const { expectedSalaries, salaryMonth, salaryYear } = this.state;\n    const found = expectedSalaries.find((salary) => {\n      return (\n        salary.month === salaryMonth + 1 &&\n        salary.year === salaryYear.toString()\n      );\n    });\n    this.setState({\n      expectedSalary: found\n        ? found.expected_salary\n        : \"Either this month has no entries or you have yet to select a month or year. Try Again with a new option\",\n    });\n  };\n\n  filterUserPetDay = async () => {\n    const { petDays, petDayMonth, petDayYear } = this.state;\n    const found = petDays.find((petDay) => {\n      return (\n        petDay.month === petDayMonth + 1 &&\n        petDay.year === petDayYear.toString()\n      );\n    });\n    console.log(found);\n    this.setState({\n      petDay: found\n        ? found\n        : \"Either this month has no entries or you have yet to select a month or year. Try Again with a new option\",\n    });\n  };\n\n  render() {\n    const {\n      isLoading,\n      name,\n      petDayMonth,\n      petDayYear,\n      salaryMonth,\n      expectedSalary,\n      salaryYear,\n      petDay,\n      pets,\n      employment,\n    } = this.state;\n    const { caretakerEmail } = this.props;\n\n    return (\n      <>\n        {isLoading && <Loading />}\n        {!isLoading && (\n          <VerticalWrapper>\n            <h1>Caretaker Profile Page</h1>\n            <h2>My Profile</h2>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h5\" component=\"h2\">\n                  {name}\n                </Typography>\n                <Typography color=\"textSecondary\">{employment}</Typography>\n                <Typography variant=\"body2\" component=\"p\">\n                  {caretakerEmail}\n                </Typography>\n              </CardContent>\n            </Card>\n            <h2>My Pet Days</h2>\n            <Card>\n              <CardContent>\n                <FormControl>\n                  <InputLabel>\n                    <b>Month</b>\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-filled-label\"\n                    id=\"demo-simple-select-filled\"\n                    value={petDayMonth}\n                    onChange={this.changePetDayMonth}\n                  >\n                    <MenuItem value={0}>January</MenuItem>\n                    <MenuItem value={1}>Feburary</MenuItem>\n                    <MenuItem value={2}>March</MenuItem>\n                    <MenuItem value={3}>April</MenuItem>\n                    <MenuItem value={4}>May</MenuItem>\n                    <MenuItem value={5}>June</MenuItem>\n                    <MenuItem value={6}>July</MenuItem>\n                    <MenuItem value={7}>August</MenuItem>\n                    <MenuItem value={8}>September</MenuItem>\n                    <MenuItem value={9}>October</MenuItem>\n                    <MenuItem value={10}>November</MenuItem>\n                    <MenuItem value={11}>December</MenuItem>\n                  </Select>\n                </FormControl>\n                <FormControl>\n                  <InputLabel>\n                    <b>Year</b>\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-filled-label\"\n                    id=\"demo-simple-select-filled\"\n                    value={petDayYear}\n                    onChange={this.changePetDayYear}\n                  >\n                    <MenuItem value={2020}>2020</MenuItem>\n                    <MenuItem value={2021}>2021</MenuItem>\n                  </Select>\n                </FormControl>\n                <hr />\n                <Typography color=\"textSecondary\">\n                  Number of Pet Days for {petDayMonth + 1}/{petDayYear}\n                </Typography>\n                <Typography variant=\"body2\" component=\"p\">\n                  {petDay ===\n                  \"Either this month has no entries or you have yet to select a month or year. Try Again with a new option\"\n                    ? petDay\n                    : petDay.monthly_pet_days}\n                </Typography>\n                <Typography color=\"textSecondary\">Average Price</Typography>\n                <Typography variant=\"body2\" component=\"p\">\n                  {petDay ===\n                  \"Either this month has no entries or you have yet to select a month or year. Try Again with a new option\"\n                    ? petDay\n                    : petDay.avg_price}\n                </Typography>\n              </CardContent>\n            </Card>\n\n            <h2>My Expected Salary</h2>\n            <Card>\n              <CardContent>\n                <FormControl>\n                  <InputLabel>\n                    <b>Month</b>\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-filled-label\"\n                    id=\"demo-simple-select-filled\"\n                    value={salaryMonth}\n                    onChange={this.changeSalaryMonth}\n                  >\n                    <MenuItem value={0}>January</MenuItem>\n                    <MenuItem value={1}>Feburary</MenuItem>\n                    <MenuItem value={2}>March</MenuItem>\n                    <MenuItem value={3}>April</MenuItem>\n                    <MenuItem value={4}>May</MenuItem>\n                    <MenuItem value={5}>June</MenuItem>\n                    <MenuItem value={6}>July</MenuItem>\n                    <MenuItem value={7}>August</MenuItem>\n                    <MenuItem value={8}>September</MenuItem>\n                    <MenuItem value={9}>October</MenuItem>\n                    <MenuItem value={10}>November</MenuItem>\n                    <MenuItem value={11}>December</MenuItem>\n                  </Select>\n                </FormControl>\n                <FormControl>\n                  <InputLabel>\n                    <b>Year</b>\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-filled-label\"\n                    id=\"demo-simple-select-filled\"\n                    value={salaryYear}\n                    onChange={this.changeSalaryYear}\n                  >\n                    <MenuItem value={2020}>2020</MenuItem>\n                    <MenuItem value={2021}>2021</MenuItem>\n                  </Select>\n                </FormControl>\n                <hr />\n                <Typography color=\"textSecondary\">\n                  Expected Salary for {salaryMonth + 1}/{salaryYear}\n                </Typography>\n                <Typography variant=\"body2\" component=\"p\">\n                  {expectedSalary}\n                </Typography>\n              </CardContent>\n            </Card>\n            <h2>There are {pets.length} pets you're taking Care of Now</h2>\n            <MaterialTable\n              columns={this.state.petColumn}\n              data={pets}\n              title=\"Current Pets\"\n              options={{\n                actionsColumnIndex: -1,\n              }}\n            />\n          </VerticalWrapper>\n        )}\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport MaterialTable from \"material-table\";\nimport { convertDateTimeToYYYYMMdd } from \"../../../common\";\nimport Loading from \"../../Layout/Loading\";\n\nconst VerticalWrapper = styled.div`\n  background-color: #f2f7f7;\n  padding: 20px;\n`;\n\nexport class CaretakerLeave extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      leaveDates: [],\n      freeDates: [],\n      leaveColumns: [\n        {\n          title: \"Leave Dates\",\n          field: \"unavailable_date\",\n        },\n      ],\n      freeColumns: [\n        {\n          title: \"Available Dates\",\n          field: \"free_date\",\n        },\n      ],\n    };\n  }\n\n  componentDidMount = async () => {\n    await this.fetchEmploymentType();\n    if (this.state.employment === \"full-time caretaker\") {\n      await this.fetchLeaves();\n    } else if (this.state.employment === \"part-time caretaker\") {\n      await this.fetchFreeDays();\n    }\n\n    this.setState({\n      isLoading: false,\n    });\n  };\n\n  fetchEmploymentType = async () => {\n    await fetch(\"/caretaker/\" + this.props.caretakerEmail, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => {\n        return response.text();\n      })\n      .then((data) => {\n        this.setState({ employment: data, isLoading: false });\n      })\n      .catch((error) => console.log(`Caught promise: ${error}`));\n  };\n\n  fetchLeaves = async () => {\n    await fetch(\"/fulltimeschedule/\" + this.props.caretakerEmail, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        this.setState({ leaveDates: data, isLoading: false });\n      })\n      .catch((error) => console.log(`Caught promise: ${error}`));\n  };\n\n  fetchFreeDays = async () => {\n    await fetch(\"/parttimeschedule/\" + this.props.caretakerEmail, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        this.setState({ freeDates: data, isLoading: false });\n      })\n      .catch((error) => console.log(`Caught promise: ${error}`));\n  };\n\n  createLeave = async (newData) => {\n    await fetch(\"/fulltimeschedule/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        unavailable_date: newData.unavailable_date,\n        email: this.props.caretakerEmail,\n      }),\n    })\n      .then((response) => {\n        return response.text();\n      })\n      .then((data) => {\n        console.log(data);\n        this.setState({ isLoading: false });\n      })\n      .catch((error) => console.log(`Caught promise: ${error}`));\n  };\n\n  createFreeDay = async (newData) => {\n    await fetch(\"/parttimeschedule/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        unavailable_date: newData.free_date,\n        email: this.props.caretakerEmail,\n      }),\n    })\n      .then((response) => {\n        return response.text();\n      })\n      .then((data) => {\n        console.log(data);\n        this.setState({ isLoading: false });\n      })\n      .catch((error) => console.log(`Caught promise: ${error}`));\n  };\n\n  deleteLeave = async (oldData) => {\n    await fetch(\n      \"/fulltimeschedule/\" +\n        this.props.caretakerEmail +\n        \"/\" +\n        convertDateTimeToYYYYMMdd(oldData.unavailable_date),\n      {\n        method: \"DELETE\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => {\n        return response.text();\n      })\n      .catch((error) => console.log(`Caught promise: ${error}`));\n  };\n\n  deleteFreeDay = async (oldData) => {\n    await fetch(\n      \"/parttimeschedule/\" +\n        this.props.caretakerEmail +\n        \"/\" +\n        convertDateTimeToYYYYMMdd(oldData.unavailable_date),\n      {\n        method: \"DELETE\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => {\n        return response.text();\n      })\n      .catch((error) => console.log(`Caught promise: ${error}`));\n  };\n\n  render() {\n    const { isLoading, employment, leaveDates, freeDates } = this.state;\n    // const {  } = this.props;\n    return (\n      <>\n        {isLoading && <Loading />}\n        {!isLoading && (\n          <VerticalWrapper>\n            <h1>{employment} </h1>\n            <h1>Leave Management Page</h1>\n            <h3>Add Leave in format MM/DD/YYYY</h3>\n            {employment === \"full-time caretaker\" && (\n              <MaterialTable\n                columns={this.state.leaveColumns}\n                data={leaveDates}\n                title=\"Your Leaves\"\n                options={{\n                  actionsColumnIndex: -1,\n                }}\n                editable={{\n                  onRowAdd: (newData) =>\n                    new Promise((resolve, reject) => {\n                      setTimeout(() => {\n                        this.setState({ leaveDates: [...leaveDates, newData] });\n                        this.createLeave(newData);\n                        resolve();\n                      }, 1000);\n                    }),\n                  onRowDelete: (oldData) =>\n                    new Promise((resolve) => {\n                      setTimeout(() => {\n                        resolve();\n                        this.setState((prevState) => {\n                          const leaveDates = [...prevState.leaveDates];\n                          leaveDates.splice(leaveDates.indexOf(oldData), 1);\n                          return { leaveDates };\n                        });\n                        this.deleteLeave(oldData);\n                        // this.handleTableDelete(oldData._id);\n                      }, 600);\n                    }),\n                }}\n              />\n            )}\n            {employment === \"part-time caretaker\" && (\n              <MaterialTable\n                columns={this.state.freeColumns}\n                data={freeDates}\n                title=\"Your availabilities\"\n                options={{\n                  actionsColumnIndex: -1,\n                }}\n                editable={{\n                  onRowAdd: (newData) =>\n                    new Promise((resolve, reject) => {\n                      setTimeout(() => {\n                        this.setState({ free_date: [...freeDates, newData] });\n                        this.createFreeDay(newData);\n                        resolve();\n                      }, 1000);\n                    }),\n                  onRowDelete: (oldData) =>\n                    new Promise((resolve) => {\n                      setTimeout(() => {\n                        resolve();\n                        this.setState((prevState) => {\n                          const freeDates = [...prevState.freeDates];\n                          freeDates.splice(freeDates.indexOf(oldData), 1);\n                          return { ...prevState, freeDates };\n                        });\n                        this.deleteFreeDay(oldData);\n                      }, 600);\n                    }),\n                }}\n              />\n            )}\n          </VerticalWrapper>\n        )}\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport MaterialTable from \"material-table\";\n\nimport Loading from \"../../Layout/Loading\";\n\nconst VerticalWrapper = styled.div`\n  background-color: #f2f7f7;\n  padding: 20px;\n`;\n\nexport class CaretakerHistory extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      pastPaychecks: [],\n      paycheckColumns: [\n        { title: \"Payer\", field: \"payment_admin\" },\n        { title: \"Addressee\", field: \"payment_addressee\" },\n        { title: \"Amount\", field: \"amount\" },\n        { title: \"Month\", field: \"month_of_issue\" },\n        { title: \"Year\", field: \"year_of_issue\" },\n      ],\n      pastBids: [],\n      bidColumns: [\n        { title: \"Pet Owner Email\", field: \"pet_owner_email\" },\n        { title: \"Pet Name\", field: \"pet_name\" },\n        { title: \"Success\", field: \"success_status\" },\n        { title: \"Started\", field: \"start_date\" },\n        { title: \"Ended\", field: \"end_date\" },\n        { title: \"Price\", field: \"price\" },\n        { title: \"Ratings\", field: \"rating\" },\n        { title: \"Review\", field: \"review\" },\n        { title: \"Payment Method\", field: \"payment_method\" },\n        { title: \"Delivery Method\", field: \"delivery_method\" },\n      ],\n    };\n  }\n\n  componentDidMount = async () => {\n    await this.fetchPastPaychecks();\n    await this.fetchPastBids();\n    this.setState({\n      isLoading: false,\n    });\n  };\n\n  fetchPastBids = async () => {\n    await fetch(\"/care_taker_success_bids/\" + this.props.caretakerEmail, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        this.setState({ pastBids: data, isLoading: false });\n      })\n      .catch((error) => console.log(`Caught promise: ${error}`));\n  };\n\n  fetchPastPaychecks = async () => {\n    await fetch(\"/paychecks/\" + this.props.caretakerEmail, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        this.setState({ pastPaychecks: data, isLoading: false });\n      })\n      .catch((error) => console.log(`Caught promise: ${error}`));\n  };\n\n  render() {\n    const { isLoading, pastPaychecks, pastBids } = this.state;\n    // const {  } = this.props;\n    return (\n      <>\n        {isLoading && <Loading />}\n        {!isLoading && (\n          <VerticalWrapper>\n            <h1>Caretaker Past History Page</h1>\n            <h2>Past Successful Bids</h2>\n            <MaterialTable\n              columns={this.state.bidColumns}\n              data={pastBids}\n              title=\"Past Successful Bids\"\n              options={{\n                actionsColumnIndex: -1,\n              }}\n            />\n            <h2>Past Paychecks</h2>\n            <MaterialTable\n              columns={this.state.paycheckColumns}\n              data={pastPaychecks}\n              title=\"Past Paychecks\"\n              options={{\n                actionsColumnIndex: -1,\n              }}\n            />\n          </VerticalWrapper>\n        )}\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { CURRENT_PAGE } from \"../common\";\n\n//LEGACY\nimport { ViewBids } from \"./Pages/ViewBids\";\nimport { ViewPetOwners } from \"./Pages/ViewPetOwners\";\nimport { ViewCareTakers } from \"./Pages/ViewCareTakers\";\nimport { CreatePet } from \"./Pages/CreatePet\";\nimport { ViewPets } from \"./Pages/ViewPets\";\nimport { CreateBid } from \"./Pages/CreateBid\";\nimport { ViewMyPets } from \"./Pages/ViewMyPets\";\n\n// NEW\nimport { PetOwnerProfile } from \"./NewPages/PetOwner/PetOwnerProfile\";\nimport { PetOwnerBid } from \"./NewPages/PetOwner/PetOwnerBid\";\nimport { PetOwnerHistory } from \"./NewPages/PetOwner/PetOwnerHistory\";\n\nimport { PCSProfile } from \"./NewPages/PCSAdmin/PCSProfile\";\nimport { CreateUser } from \"./Pages/CreateUser\";\nimport { PCSHistory } from \"./NewPages/PCSAdmin/PCSHistory\";\n\nimport { CaretakerProfile } from \"./NewPages/Caretaker/CaretakerProfile\";\nimport { CaretakerLeave } from \"./NewPages/Caretaker/CaretakerLeave\";\nimport { CaretakerHistory } from \"./NewPages/Caretaker/CaretakerHistory\";\n\nconst VerticalWrapper = styled.div`\n  left: 280px;\n  position: absolute;\n  background-color: #f2f7f7;\n  padding: 20px;\n  min-height: 80%;\n  display: flex;\n`;\n\nexport class Workspace extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const {\n      currentPage,\n      userType,\n      petOwnerEmail,\n      PCSEmail,\n      caretakerEmail,\n    } = this.props;\n    return (\n      <VerticalWrapper>\n        {/* LEGACY ROUTES */}\n        {currentPage === CURRENT_PAGE.VIEW_BIDS && <ViewBids />}\n        {currentPage === CURRENT_PAGE.VIEW_PETOWNER && <ViewPetOwners />}\n        {currentPage === CURRENT_PAGE.VIEW_CARETAKER && <ViewCareTakers />}\n        {currentPage === CURRENT_PAGE.CREATE_PET && <CreatePet />}\n        {currentPage === CURRENT_PAGE.VIEW_PETS && <ViewPets />}\n        {currentPage === CURRENT_PAGE.VIEW_PETOWNER_PET && <ViewMyPets />}\n        {currentPage === CURRENT_PAGE.CREATE_BID && <CreateBid />}\n        {/* LEGACY ROUTES */}\n        {currentPage === CURRENT_PAGE.PETOWNER_PROFILE && (\n          <PetOwnerProfile userType={userType} petOwnerEmail={petOwnerEmail} />\n        )}\n        {currentPage === CURRENT_PAGE.PETOWNER_BID && (\n          <PetOwnerBid petOwnerEmail={petOwnerEmail} />\n        )}\n        {currentPage === CURRENT_PAGE.PETOWNER_HISTORY && (\n          <PetOwnerHistory petOwnerEmail={petOwnerEmail} />\n        )}\n        {currentPage === CURRENT_PAGE.CARETAKER_PROFILE && (\n          <CaretakerProfile caretakerEmail={caretakerEmail} />\n        )}\n        {currentPage === CURRENT_PAGE.CARETAKER_LEAVE && (\n          <CaretakerLeave caretakerEmail={caretakerEmail} />\n        )}\n        {currentPage === CURRENT_PAGE.CARETAKER_HISTORY && (\n          <CaretakerHistory caretakerEmail={caretakerEmail} />\n        )}\n        {currentPage === CURRENT_PAGE.PCSADMIN_PROFILE && (\n          <PCSProfile userType={userType} PCSEmail={PCSEmail} />\n        )}\n        {currentPage === CURRENT_PAGE.CREATE_USER && <CreateUser />}\n        {currentPage === CURRENT_PAGE.PCSADMIN_HISTORY && (\n          <PCSHistory PCSEmail={PCSEmail} />\n        )}\n      </VerticalWrapper>\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { LeftBar } from \"./Layout/LeftBar\";\nimport { Workspace } from \"./Workspace\";\nimport { USER_TYPES, CURRENT_PAGE } from \"../common\";\n\nconst MainContainer = styled.div`\n  height: 100%;\n  width: 100%;\n  background-color: #f2f7f7;\n  font-family: HelveticaNeue;\n`;\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userType: USER_TYPES.PETOWNER,\n      currentPage: CURRENT_PAGE.PCSADMIN_PROFILE,\n      petOwnerEmail: \"petowner2@email.com\",\n      PCSEmail: \"pcsadmin@email.com\",\n      caretakerEmail: \"caretaker2@email.com\",\n    };\n  }\n\n  handleUserType = (newType) => {\n    this.setState({\n      userType: newType.target.value,\n    });\n  };\n\n  handlePageChange = (selectedPage) => {\n    console.log(selectedPage);\n    this.setState({\n      currentPage: selectedPage,\n    });\n  };\n\n  render() {\n    const {\n      userType,\n      currentPage,\n      petOwnerEmail,\n      PCSEmail,\n      caretakerEmail,\n    } = this.state;\n    return (\n      <MainContainer>\n        <LeftBar\n          userType={userType}\n          handleUserType={this.handleUserType}\n          handlePageChange={this.handlePageChange}\n          currentPage={currentPage}\n          petOwnerEmail={petOwnerEmail}\n          caretakerEmail={caretakerEmail}\n          PCSEmail={PCSEmail}\n        />\n        <Workspace\n          currentPage={currentPage}\n          userType={userType}\n          handleUserType={this.handleUserType}\n          petOwnerEmail={petOwnerEmail}\n          caretakerEmail={caretakerEmail}\n          PCSEmail={PCSEmail}\n        />\n      </MainContainer>\n    );\n  }\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n// import MainPage from \"./MainPage\";\nimport Home from \"./components/Home\";\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <Router>\n        {/* <Route exact path=\"/\" component={MainPage} /> */}\n        <Route exact path=\"/\" component={Home} />\n      </Router>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}